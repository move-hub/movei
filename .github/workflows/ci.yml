name: CI
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  rust:
    name: Rust
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
          windows-latest,
          macos-latest
        ]

    env:
      RUSTFLAGS: -D warnings
      CARGO_INCREMENTAL: 0
      RUSTUP_MAX_RETRIES: 10
      CARGO_NET_RETRY: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt, clippy

      - id: cargo-deps
        name: (load cache) Download dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-deps-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-deps-${{ runner.os }}-
      - if: ${{ steps.cargo-deps.outputs.cache-hit != 'true' }}
        name: Download dependencies
        run: cargo fetch --locked

      - id: cargo-build
        name: (load cache) Build with --lib
        uses: actions/cache@v2
        with:
          path: ./target
          key: cargo-build-lib-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-deps-${{ runner.os }}-

      - if: ${{ steps.cargo-build.outputs.cache-hit != 'true' }}
        name: Build with --lib
        run: cargo build --lib

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Build
        run: cargo build --workspace

      - name: Run clippy
        run: cargo clippy --tests --examples -- -Dwarnings

      - name: Test
        run: cargo test --tests
